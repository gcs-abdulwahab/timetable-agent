name: Timetable Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'data/**'
      - 'scripts/**'
      - '__tests__/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'data/**'
      - 'scripts/**'
      - '__tests__/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Make validation script executable
      run: chmod +x scripts/validate-timetable.js

    - name: Run timetable validation
      run: node scripts/validate-timetable.js

    - name: Run snapshot tests
      run: npm test -- __tests__/allocations-snapshot.test.js

    - name: Generate validation report
      if: always()
      run: |
        echo "## üìä Timetable Validation Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        node scripts/validate-timetable.js > validation_output.txt 2>&1 || true
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat validation_output.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

    - name: Upload validation artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-results
        path: |
          validation_output.txt
        retention-days: 30

  lint-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Validate JSON format
      run: |
        echo "Validating JSON files..."
        for file in data/*.json; do
          if [[ -f "$file" ]]; then
            echo "Checking $file..."
            python -m json.tool "$file" > /dev/null
            echo "‚úÖ $file is valid JSON"
          fi
        done

    - name: Check file encoding
      run: |
        echo "Checking file encodings..."
        # Check for BOM in JSON files
        for file in data/*.json; do
          if [[ -f "$file" ]]; then
            if file "$file" | grep -q "UTF-8"; then
              if hexdump -C "$file" | head -1 | grep -q "ef bb bf"; then
                echo "‚ö†Ô∏è  Warning: $file contains BOM"
              else
                echo "‚úÖ $file: UTF-8 without BOM"
              fi
            else
              echo "‚ö†Ô∏è  Warning: $file encoding: $(file "$file")"
            fi
          fi
        done
